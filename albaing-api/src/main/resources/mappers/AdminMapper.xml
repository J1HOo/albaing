<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jobjob.albaing.mapper.AdminMapper">

    <!-- 이하 모든 "select *" 구문 수정할 것-->
    <!-- 구문마다 목적, 개요 주석 달 것-->

    <!-- 개인 회원 조회 : 이름, 이메일, 전화번호로 검색 -->
    <!-- String userName, userEmail, userPhone 을 받아 해당 항목과 부분 이상 일치하는 항목 찾기 -->
    <!-- sortOrderBy (이름, 이메일, 전화번호, 가입일) 를 받아 정렬 기준을 정함 -->
    <!-- isDESC 받아 오름차순, 내림차순을 정함 -->
    <!-- List<User>(조건을 만족하는 사용자 리스트)로 반환 -->
    <select id="adminSearchUser">
        SELECT *
        FROM USERS
        <WHERE>
            <trim prefixOverrides="AND">
                <if test="userName != null and userName != ''">
                    AND user_name LIKE CONCAT('%', #{userName}, '%')
                </if>
                <if test="userEmail != null and userEmail != ''">
                    AND user_email LIKE CONCAT('%', #{userEmail}, '%')
                </if>
                <if test="userPhone != null and userPhone != ''">
                    AND user_phone LIKE CONCAT('%', #{userPhone}, '%')
                </if>
            </trim>
        </WHERE>
        <trim prefix="ORDER BY">
            <if test="sortOrderBy == '이름'">
                user_name
            </if>
            <if test="sortOrderBy == '이메일'">
                user_email
            </if>
            <if test="sortOrderBy == '전화번호'">
                user_phone
            </if>
            <if test="sortOrderBy == '가입일'">
                user_created_at
            </if>
            <if test="isDESC == true">
                DESC
            </if>
        </trim>
    </select>


    <!-- 개인 이력서 조회 : 제목, 직업 분류, 근무 형태로 검색 -->
    <!-- String resumeTitle, resumeJobCategory, resumeJobType 을 받아 해당 항목과 부분 이상 일치하는 항목 찾기-->
    <!-- 개인 이력서 목록 전체를 List<RESUME>로 반환-->
    <select id="adminSearchResumes">
        SELECT *
        FROM RESUMES
        <WHERE>
            <trim prefixOverrides="AND">
                <if test="resumeTitle != null and resumeTitle != ''">
                    AND user_name LIKE CONCAT('%', #{resumeTitle}, '%')
                </if>
                <if test="resumeJobCategory != null and resumeJobCategory != ''">
                    AND resume_job_category LIKE CONCAT('%', #{resumeJobCategory}, '%')
                </if>
                <if test="resumeJobType != null and resumeJobType != ''">
                    AND resume_job_type LIKE CONCAT('%', #{resumeJobType}, '%')
                </if>
            </trim>
        </WHERE>
        <trim prefix="ORDER BY">
            <if test="sortOrderBy == '이름'">
                user_name
            </if>
            <if test="sortOrderBy == '이메일'">
                user_email
            </if>
            <if test="sortOrderBy == '전화번호'">
                user_phone
            </if>
            <if test="sortOrderBy == '가입일'">
                user_created_at
            </if>
            <if test="isDESC == true">
                DESC
            </if>
        </trim>
    </select>

    <!-- 공고 지원 조회 -->
    <!-- String userName, companyName, jobPostTitle 을 받아 해당 항목과 부분 이상 일치하는 항목 찾기 -->
    <!-- 공고 지원 목록 전체를 List<JobApplication>로 반환-->
    <select id="adminSearchResumes">
        SELECT *
        FROM JOB_APPLICATIONS

        <WHERE>
            <trim prefixOverrides="AND">
                <if test="resumeTitle != null and resumeTitle != ''">
                    AND user_name LIKE CONCAT('%', #{resumeTitle}, '%')
                </if>
                <if test="resumeJobCategory != null and resumeJobCategory != ''">
                    AND resume_job_category LIKE CONCAT('%', #{resumeJobCategory}, '%')
                </if>
                <if test="resumeJobType != null and resumeJobType != ''">
                    AND resume_job_type LIKE CONCAT('%', #{resumeJobType}, '%')
                </if>
            </trim>
        </WHERE>
    </select>

    <!-- 기업 회원 조회 -->
    <!-- 기업 회원 조회 -->
    <!-- 기업 회원 목록 전체를 List<Company>로 반환-->


    <!-- 기업 회원 조회 : 기업명으로 검색 -->
    <!-- String companyName(기업명 전체 혹은 부분) 을 받아 조건에 부합하는 계정을 찾고, List<Company>(조건을 만족하는 회사 리스트)로 반환-->


    <!-- 기업 회원 조회 : 대표자명의로 검색 -->
    <!-- String companyOwnerName(대표자 명의 전체 혹은 부분) 을 받아 조건에 부합하는 계정을 찾고, List<Company>(조건을 만족하는 회사 리스트)로 반환-->

    <!-- 기업 회원 조회 : 전화번호로 검색 -->
    <!-- String companyPhone(기업 전화번호 전체 혹은 부분) 을 받아 조건에 부합하는 계정을 찾고, List<Company>(조건을 만족하는 회사 리스트)로 반환-->


    <!-- 기업 회원 조회 : 사업자등록번호로 검색 -->
    <!-- String companyRegistrationNumber(사업자등록번호 전체 혹은 부분) 을 받아 조건에 부합하는 계정을 찾고, List<Company>(조건을 만족하는 회사 리스트)로 반환-->


    <!-- 기업 공고 조회 -->
    <!-- 기업 공고 전체 조회 -->
    <!-- 기업 공고 목록 전체를 List<JobPost>로 반환-->


    <!-- 기업 공고 조회 : 기업명으로 검색 -->
    <!-- String companyName(기업명 전체 혹은 부분) 을 받아 조건에 부합하는 계정을 찾고, List<JobPost>(조건을 만족하는 공고 리스트)로 반환-->


    <!-- 기업 공고 조회 : 공고 제목으로 검색 -->
    <!-- String job_post_title(기업명 전체 혹은 부분) 을 받아 조건에 부합하는 계정을 찾고, List<JobPost>(조건을 만족하는 공고 리스트)로 반환-->


    <!-- 기업 공고 조회 : 공고 상태로 검색 -->
    <!-- String job_post_status 을 받아 조건에 부합하는 계정을 찾고, List<JobPost>(조건을 만족하는 공고 리스트)로 반환-->


</mapper>